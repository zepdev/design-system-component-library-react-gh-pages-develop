{"version":3,"file":"Radio.stories-f2ddab88.js","sources":["../../src/components/atoms/radio/radio.interface.ts","../../src/components/atoms/radio/Radio.tsx"],"sourcesContent":["import { HTMLAttributes } from 'react';\n\nexport interface RadioProps extends HTMLAttributes<HTMLInputElement> {\n  id: string;\n  name?: string;\n  value?: string;\n  selected: boolean;\n  disabled?: boolean;\n  error?: boolean;\n  label: string;\n  onChange: () => void;\n}\n\nexport const RadioScope = 'zep-radio';\n","// Radio.tsx\nimport clsx from 'clsx';\nimport { focusRing } from '../../../tailwind/styles/focus';\nimport { RadioProps, RadioScope } from './radio.interface';\nimport { borderRadius } from '../../../tailwind/styles/border-radius';\n\nexport const Radio: React.FC<RadioProps> = ({\n  id,\n  name,\n  value = id,\n  selected = false,\n  disabled = false,\n  error = false,\n  label,\n  tabIndex = 0,\n  onChange,\n  ...props\n}) => {\n  return (\n    <span\n      className={clsx(RadioScope, 'inline-flex', 'flex-row', 'flex-wrap', 'items-center', 'justify-start', 'relative')}\n      data-testid=\"zep-radio\"\n    >\n      {selected && (\n        <span\n          className={clsx(\n            'absolute',\n            'w-[22px]',\n            'h-[22px]',\n            'z-10',\n            'absolute',\n            'top-[1px]',\n            'left-[1px]',\n            'border-white',\n            'border-[6px]',\n            'rounded-full',\n            [error ? 'bg-zep-red-500' : 'bg-black'],\n          )}\n        ></span>\n      )}\n      <input\n        id={id}\n        value={value}\n        name={name}\n        type=\"radio\"\n        tabIndex={tabIndex}\n        checked={selected}\n        onChange={!disabled ? onChange : undefined}\n        className={clsx(\n          borderRadius,\n          focusRing,\n          'appearance-none',\n          'focus-visible:ring-offset-1',\n          'w-zep-1_5',\n          'h-zep-1_5',\n          'rounded-full',\n          'border',\n          'border-zep-grey-900',\n          [selected ? 'bg-zep-grey-900 border-zep-grey-900' : 'bg-white'],\n          { 'opacity-zep-40': disabled },\n          { 'bg-zep-red-500 border-zep-red-500 ': error && selected },\n          { 'border-zep-red-500': error && !selected },\n        )}\n        disabled={disabled}\n        data-testid=\"zep-radio-input\"\n        {...props}\n      />\n      <label\n        htmlFor={id}\n        className={clsx('relative', 'z-20', 'ml-[-24px]', 'pl-[36px]', [\n          disabled ? 'cursor-not-allowed opacity-zep-40' : 'cursor-pointer [&>div]:hover:border-zep-grey-900',\n        ])}\n      >\n        {label}\n      </label>\n    </span>\n  );\n};\n"],"names":["RadioScope","Radio","id","name","value","selected","disabled","error","label","tabIndex","onChange","props","React","clsx","borderRadius","focusRing"],"mappings":"iQAaO,MAAMA,EAAa,YCPnBC,EAAA,CAAA,CAAqC,GAAAC,EAC1C,KAAAC,EACA,MAAAC,EAAAF,EACQ,SAAAG,EAAA,GACG,SAAAC,EAAA,GACA,MAAAC,EAAA,GACH,MAAAC,EACR,SAAAC,EAAA,EACW,SAAAC,EACX,GAAAC,CAEF,IACEC,EAAA,cACE,OAAC,CAAA,UAAAC,EAAAb,EAAA,cAAA,WAAA,YAAA,eAAA,gBAAA,UAAA,EACgH,cAAA,WACnG,EAAAK,GAAAO,EAAA,cAGV,OAAC,CAAA,UAAAC,EACY,WACT,WACA,WACA,OACA,WACA,YACA,aACA,eACA,eACA,eACA,CAAAN,EAAA,iBAAA,UAAA,CACsC,CACxC,CAAA,EACDK,EAAA,cAEH,QAAC,CAAA,GAAAV,EACC,MAAAE,EACA,KAAAD,EACA,KAAA,QACK,SAAAM,EACL,QAAAJ,EACS,SAAAC,EAAA,OAAAI,EACwB,UAAAG,EACtBC,EACTC,EACA,kBACA,8BACA,YACA,YACA,eACA,SACA,sBACA,CAAAV,EAAA,sCAAA,UAAA,EAC8D,CAAA,iBAAAC,CAAA,EACjC,CAAA,qCAAAC,GAAAF,CAAA,EAC6B,CAAA,qBAAAE,GAAA,CAAAF,CAAA,CACf,EAC7C,SAAAC,EACA,cAAA,kBACY,GAAAK,CACR,CAAA,EACNC,EAAA,cACA,QAAC,CAAA,QAAAV,EACU,UAAAW,EAAA,WAAA,OAAA,aAAA,YAAA,CACsDP,EAAA,oCAAA,kDACZ,CAAA,CAClD,EAAAE,CAEA,CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
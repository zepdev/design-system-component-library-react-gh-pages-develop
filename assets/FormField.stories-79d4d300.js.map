{"version":3,"file":"FormField.stories-79d4d300.js","sources":["../../src/components/atoms/form-field/form-field.interface.ts","../../src/components/atoms/form-field/FormField.tsx"],"sourcesContent":["import { HTMLAttributes, ReactNode } from 'react';\n\nexport interface FormFieldProps extends HTMLAttributes<HTMLInputElement> {\n  required?: boolean;\n  children: ReactNode;\n  id?: string;\n  message: string;\n  state?: 'error' | 'success' | 'default';\n}\n\nexport const FormFieldScope = 'zep-form-field';\n","// Checkbox.tsx\nimport clsx from 'clsx';\nimport { FunctionalIcon } from '../icon/Icon';\nimport { FormFieldProps, FormFieldScope } from './form-field.interface';\n\nexport const FormField: React.FC<FormFieldProps> = ({\n  id,\n  required,\n  children,\n  state = 'default',\n  message,\n  ...props\n}) => {\n  return (\n    <div\n      className={clsx(FormFieldScope, 'inline-flex', 'flex-col', 'flex-nowrap')}\n      data-testid=\"zep-form-field\"\n      {...props}\n    >\n      {children}\n      <span\n        id={id}\n        className={clsx({ 'text-red-500 ': state === 'error' || required, 'text-green-500': state === 'success'}, 'mt-2 flex flex-row items-center gap-2')}\n      >\n        {(state === 'error' || required) && <FunctionalIcon name=\"Warning\" className='text-red-500'/>}\n        {message}\n      </span>\n    </div>\n  );\n};\n"],"names":["FormFieldScope","FormField","id","required","children","state","message","props","React","clsx","FunctionalIcon"],"mappings":"2TAUO,MAAMA,EAAiB,iBCLvBC,EAAA,CAAA,CAA6C,GAAAC,EAClD,SAAAC,EACA,SAAAC,EACA,MAAAC,EAAA,UACQ,QAAAC,EACR,GAAAC,CAEF,IACEC,EAAA,cACE,MAAC,CAAA,UAAAC,EAAAT,EAAA,cAAA,WAAA,aAAA,EACyE,cAAA,iBAC5D,GAAAO,CACR,EAAAH,EAEHI,EAAA,cACD,OAAC,CAAA,GAAAN,EACC,UAAAO,EAAA,CAAA,gBAAAJ,IAAA,SAAAF,EAAA,iBAAAE,IAAA,SAAA,EAAA,uCAAA,CACiJ,GAAAA,IAAA,SAAAF,IAAAK,EAAA,cAAAE,EAAA,CAAA,KAAA,UAAA,UAAA,cAAA,CAAA,EAEtDJ,CAC1F,CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
{"version":3,"file":"Teaser.stories-61f269d1.js","sources":["../../src/components/teaser/Teaser.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport {createContext, useContext} from 'react';\nimport {Button, ButtonProps, ButtonVariant} from '..';\nimport {TeaserBodyProps, TeaserDescriptionProps, TeaserHeadlineProps, TeaserImageProps, TeaserProps, TeaserTaglineProps} from './teaser.interface';\n\nconst TeaserContext = createContext({backgroundColor: 'dark'});\nexport const useTeaserContext = () => useContext(TeaserContext);\n\nconst Teaser = ({backgroundColor = 'dark', imageAlignment = 'left', children}: TeaserProps) => {\n\n    const containerClass     = backgroundColor === 'dark' ? 'zep-bg-background-dark zep-text-typography-light-100' : 'zep-bg-background-light zep-text-typography-dark-100';\n    const flexDirectionClass = imageAlignment === 'left' ? 'md:zep-flex-row' : 'md:zep-flex-row-reverse';\n\n    return (\n        <TeaserContext.Provider value={{backgroundColor}}>\n            <div\n                className={clsx(flexDirectionClass, containerClass, 'zep-flex-col', 'zep-rounded-lg', 'zep-shadow-lg', 'md:zep-flex')}\n                data-testid='zep-teaser'\n            >\n                {children}\n            </div>\n        </TeaserContext.Provider>\n    );\n}\nconst TeaserImage = ({src, alt, aspectRatio = '16:9'}: TeaserImageProps) => {\n    const imageAspectRation = aspectRatio === '16:9' ? 'zep-pb-[calc(9_*_100%_/_16)]' : 'zep-pb-[calc(16_*_100%_/_9)]'\n    return (\n        <div data-testid='zep-teaser-image' className={clsx('zep-justify-center zep-flex zep-items-center md:zep-w-5/6 md:zep-relative xl:zep-w-10/12')}>\n            <div className={clsx('zep-relative', 'zep-w-full', 'zep-h-0', 'md:zep-relative', 'md:zep-block', 'md:zep-pl-8', 'md:zep-h-0', imageAspectRation)}>\n                <div className={clsx('zep-absolute zep-inset-0 zep-justify-center zep-flex zep-items-center')}>\n                    <img alt={alt} src={src} className={clsx('zep-w-full zep-h-full zep-object-cover md:zep-w-full md:zep-h-full md:zep-max-w-full')}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst TeaserBody = ({children}: TeaserBodyProps) => {\n    return (\n        <div data-testid='zep-teaser-body' className={clsx('zep-@container zep-flex zep-items-center zep-p-1.5 md:zep-px-1.5 md:zep-w-1/2 xl:zep-w-1/2 lg:zep-px-[80px]')}>\n            <div className='lg:zep-pl-8 sm:zep-block zep-inline-grid'>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nconst TeaserTagline = ({children}: TeaserTaglineProps) => {\n    return (\n        <p data-testid='zep-teaser-tagline' className={clsx('zep-typography-tagline zep-mb-0.5')}>\n            {children}\n        </p>\n    );\n}\n\nconst TeaserHeadline = ({children}: TeaserHeadlineProps) => {\n    return (\n        <h4 data-testid='zep-teaser-headline' className={clsx(\n            'zep-typography-headlineLG',\n            'supports-cqi:zep-typography-headlineLG-fluid-cqi',\n            'supports-cqi:after:zep-text-[0.23em]',\n            'zep-mb-0.5',\n            'zep-text-left')}>\n            {children}\n        </h4>\n    );\n}\n\nconst TeaserDescription = ({children}: TeaserDescriptionProps) => {\n    return (\n        <p data-testid='zep-teaser-description'>{typeof children === 'string' ? `${children.slice(0, 256)}${children.length > 256 ? '...' : ''}` : ''}</p>\n    )\n}\n\nconst TeaserButton = ({children, label, onClick}: Pick<ButtonProps, 'children' | 'onClick' | 'icon' | 'iconPosition' | 'label'>) => {\n    const {backgroundColor} = useTeaserContext()\n    const buttonVariant     = backgroundColor === 'dark' ? ButtonVariant.LightPrimary : ButtonVariant.DarkPrimary;\n    return (\n        <Button\n            variant={buttonVariant}\n            onClick={onClick}\n            className={clsx('zep-mt-1 lg:zep-mt-1.5 md:zep-flex')}\n            data-testid='zep-teaser-button'\n            label={label}\n        > {children}</Button>\n    );\n}\n\nTeaser.Image       = TeaserImage;\nTeaser.Tagline     = TeaserTagline;\nTeaser.Body        = TeaserBody;\nTeaser.Headline    = TeaserHeadline;\nTeaser.Description = TeaserDescription;\nTeaser.Button      = TeaserButton;\n\n\nexport {Teaser};"],"names":["TeaserContext","createContext","useTeaserContext","useContext","Teaser","backgroundColor","imageAlignment","children","containerClass","flexDirectionClass","jsxDEV","clsx","this","TeaserImage","src","alt","aspectRatio","imageAspectRation","TeaserBody","TeaserTagline","TeaserHeadline","TeaserDescription","TeaserButton","label","onClick","buttonVariant","ButtonVariant","Button"],"mappings":"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"}
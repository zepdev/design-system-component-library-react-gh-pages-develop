{"version":3,"file":"Checkbox.stories-d09be60e.js","sources":["../../src/components/atoms/checkbox/checkbox.interface.ts","../../src/components/atoms/checkbox/Checkbox.tsx"],"sourcesContent":["import { HTMLAttributes } from 'react';\n\nexport interface CheckboxProps extends HTMLAttributes<HTMLInputElement> {\n  id: string;\n  checked: boolean;\n  disabled?: boolean;\n  error?: boolean;\n  label: string;\n  onChange: () => void;\n}\n\nexport const CheckboxScope = 'zep-checkbox';\n","// Checkbox.tsx\nimport clsx from 'clsx';\nimport { focusRing } from './../../../tailwind/styles/focus';\nimport { DefaultIcon } from '../icon/Icon';\nimport { CheckboxProps, CheckboxScope } from './checkbox.interface';\nimport { borderRadius } from './../../../tailwind/styles/border-radius';\n\nexport const Checkbox: React.FC<CheckboxProps> = ({\n  id,\n  checked = false,\n  disabled = false,\n  error = false,\n  label,\n  onChange,\n  ...props\n}) => {\n  return (\n    <div className={clsx('inline-flex', 'flex-row', 'flex-wrap', 'items-center', 'justify-start', 'relative')}>\n      {checked && (\n        <DefaultIcon\n          name=\"Check\"\n          className={clsx(\n            borderRadius,\n            'w-zep-1_5',\n            'h-zep-1_5',\n            'text-white',\n            'z-10',\n            'bg-zep-grey-900',\n            'absolute',\n            'top-[-0.1px]',\n            'left-[-0.1px]',\n            { 'bg-zep-red-500 border-zep-red-500 ': error },\n            { ' hover:border-zep-red-500': error },\n          )}\n        />\n      )}\n      <input\n        id={id}\n        type=\"checkbox\"\n        checked={checked}\n        onChange={onChange}\n        className={clsx(\n          borderRadius,\n          focusRing,\n          'appearance-none',\n          'focus-visible:ring-offset-1',\n          'w-zep-1_5',\n          'h-zep-1_5',\n          'rounded',\n          'border',\n          'border-zep-grey-900',\n          { 'border-2 border-zep-red-500' : error },\n          { 'cursor-not-allowed opacity-zep-40' : disabled },\n        )}\n        disabled={disabled}\n        {...props}\n      />\n      <label\n        htmlFor={id}\n        className={clsx(CheckboxScope, 'relative', 'z-20', 'ml-[-24px]', 'pl-[36px]', [\n          disabled ? 'cursor-not-allowed opacity-zep-40' : 'cursor-pointer [&>div]:hover:border-zep-grey-900',\n        ])}\n      >\n        {label}\n      </label>\n    </div>\n  );\n};\n"],"names":["CheckboxScope","Checkbox","id","checked","disabled","error","label","onChange","props","React","clsx","DefaultIcon","borderRadius","focusRing"],"mappings":"qNAWO,MAAMA,EAAgB,eCJtBC,EAAA,CAAA,CAA2C,GAAAC,EAChD,QAAAC,EAAA,GACU,SAAAC,EAAA,GACC,MAAAC,EAAA,GACH,MAAAC,EACR,SAAAC,EACA,GAAAC,CAEF,IACEC,EAAA,cAAA,MAAA,CAAA,UAAAC,EAAA,cAAA,WAAA,YAAA,eAAA,gBAAA,UAAA,CAAA,EAAAP,GAAAM,EAAA,cAGME,EAAC,CAAA,KAAA,QACM,UAAAD,EACME,EACT,YACA,YACA,aACA,OACA,kBACA,WACA,eACA,gBACA,CAAA,qCAAAP,CAAA,EAC8C,CAAA,4BAAAA,CAAA,CACT,CACvC,CAAA,EAAAI,EAAA,cAGJ,QAAC,CAAA,GAAAP,EACC,KAAA,WACK,QAAAC,EACL,SAAAI,EACA,UAAAG,EACWE,EACTC,EACA,kBACA,8BACA,YACA,YACA,UACA,SACA,sBACA,CAAA,8BAAAR,CAAA,EACwC,CAAA,oCAAAD,CAAA,CACS,EACnD,SAAAA,EACA,GAAAI,CACI,CAAA,EAAAC,EAAA,cAEN,QAAC,CAAA,QAAAP,EACU,UAAAQ,EAAAV,EAAA,WAAA,OAAA,aAAA,YAAA,CACqEI,EAAA,oCAAA,kDAC3B,CAAA,CAClD,EAAAE,CAEA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
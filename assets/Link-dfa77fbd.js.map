{"version":3,"file":"Link-dfa77fbd.js","sources":["../../src/components/link/link.interface.ts","../../src/components/link/Link.tsx"],"sourcesContent":["import { AnchorHTMLAttributes, ElementType } from 'react';\nimport { FunctionalIconNames } from '../icon';\n\nexport enum LinkMode {\n  Standalone = 'standalone',\n  Inline = 'inline',\n}\n\nexport enum LinkSize {\n  Base = 'base',\n  Small = 'sm',\n}\n\nexport enum LinkTarget {\n  Self = '_self',\n  Blank = '_blank',\n}\n\nexport interface LinkProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  as?: ElementType;\n  label: string;\n  mode?: LinkMode;\n  disabled?: boolean;\n  size?: LinkSize;\n  target?: LinkTarget;\n  icon?: FunctionalIconNames;\n}\n","import { clsx } from 'clsx';\nimport { FunctionalIconNames } from '../icon';\nimport { FunctionalIcon } from '../icon/Icon';\nimport { LinkMode, LinkProps, LinkSize, LinkTarget } from './link.interface';\n\nexport const Link: React.FC<LinkProps> = ({\n  as: Tag = 'a',\n  size = LinkSize.Base,\n  mode = LinkMode.Inline,\n  disabled = false,\n  target = LinkTarget.Self,\n  label,\n  icon = mode === LinkMode.Standalone ? 'arrow-long-right' : undefined,\n  ...props\n}) => {\n  return (\n    <Tag\n      className={clsx(\n        'zep-typography-bodyText',\n        'zep-text-typography-dark-100',\n        'zep-outline-none',\n        'zep-rounded-4',\n        'zep-border-separate',\n        'zep-leading-1.25',\n        'zep-inline',\n        'zep-items-center',\n        'zep-cursor-pointer',\n        'zep-underline-offset-2',\n        { 'zep-link-inline': mode === LinkMode.Inline },\n        { 'zep-link-standalone': mode === LinkMode.Standalone },\n        { 'active:zep-text-neutral-dark-active': !disabled },\n        { 'zep-underline': mode === LinkMode.Inline },\n        { 'hover:zep-underline': mode === LinkMode.Standalone && !disabled },\n        { 'zep-flex zep-items-center': mode === LinkMode.Standalone },\n        { 'hover:zep-cursor-default !zep-text-neutral-dark-disabled/40': disabled },\n        { 'zep-text-0.875': size !== LinkSize.Base },\n        { 'zep-ring-focus focus-visible:zep-ring': Tag === 'a' },\n      )}\n      tabIndex={disabled ? -1 : 0}\n      disabled={disabled}\n      aria-disabled={disabled}\n      target={target}\n      {...props}\n    >\n      <span className={clsx('zep-inline', { 'hover:zep-cursor-default': disabled })}>{label}</span>\n      {(icon || mode === LinkMode.Standalone) && (\n        <FunctionalIcon name={icon as FunctionalIconNames} className={clsx('zep-inline', { 'zep-ml-0.25': label })} />\n      )}\n    </Tag>\n  );\n};\n"],"names":["LinkMode","LinkSize","LinkTarget","Link","Tag","size","mode","disabled","target","label","icon","props","jsxDEV","clsx","this","FunctionalIcon"],"mappings":"qFAGY,IAAAA,GAAAA,IACVA,EAAA,WAAa,aACbA,EAAA,OAAS,SAFCA,IAAAA,GAAA,CAAA,CAAA,EAKAC,GAAAA,IACVA,EAAA,KAAO,OACPA,EAAA,MAAQ,KAFEA,IAAAA,GAAA,CAAA,CAAA,EAKAC,GAAAA,IACVA,EAAA,KAAO,QACPA,EAAA,MAAQ,SAFEA,IAAAA,GAAA,CAAA,CAAA,ECRL,MAAAC,EAAA,CAAA,CAAmC,GAAAC,EAAA,IAC9B,KAAAC,EAAAJ,EAAA,KACM,KAAAK,EAAAN,EAAA,OACA,SAAAO,EAAA,GACL,OAAAC,EAAAN,EAAA,KACS,MAAAO,EACpB,KAAAC,EAAAJ,IAAAN,EAAA,WAAA,mBAAA,OAC2D,GAAAW,CAE7D,IACEC,EAAA,OACER,EAAC,CAAA,UAAAS,EACY,0BACT,+BACA,mBACA,gBACA,sBACA,mBACA,aACA,mBACA,qBACA,yBACA,CAAA,kBAAAP,IAAAN,EAAA,MAAA,EAC8C,CAAA,sBAAAM,IAAAN,EAAA,UAAA,EACQ,CAAA,sCAAA,CAAAO,CAAA,EACH,CAAA,gBAAAD,IAAAN,EAAA,MAAA,EACP,CAAA,sBAAAM,IAAAN,EAAA,YAAA,CAAAO,CAAA,EACuB,CAAA,4BAAAD,IAAAN,EAAA,UAAA,EACP,CAAA,8DAAAO,CAAA,EACc,CAAA,iBAAAF,IAAAJ,EAAA,IAAA,EAC/B,CAAA,wCAAAG,IAAA,GAAA,CACY,EACzD,SAAAG,EAAA,GAAA,EAC0B,SAAAA,EAC1B,gBAAAA,EACe,OAAAC,EACf,GAAAG,EACI,SAAA,CAEJC,EAAAA,OAAA,OAAA,CAAA,UAAAC,EAAA,aAAA,CAAA,2BAAAN,CAAA,CAAA,EAAA,SAAAE,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,sDAAA,WAAA,GAAA,aAAA,CAAA,EAAAK,UAAA,GAAsFJ,GAAAJ,IAAAN,EAAA,aAAAY,EAAAA,OAAAG,EAAA,CAAA,KAAAL,EAAA,UAAAG,EAAA,aAAA,CAAA,cAAAJ,CAAA,CAAA,GAAA,OAAA,GAAA,CAEpF,SAAA,sDAAA,WAAA,GAAA,aAAA,CAAA,EAAAK,UAAA,CAA4G,CAAA,EAAA,OA9BhH,GAAA,CAAA,SAAA,sDAAA,WAAA,GAAA,aAAA,CAAA,EAAAA,UAAA"}
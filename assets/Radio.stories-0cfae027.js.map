{"version":3,"file":"Radio.stories-0cfae027.js","sources":["../../src/components/atoms/radio/radio.interface.ts","../../src/components/atoms/radio/Radio.tsx"],"sourcesContent":["import { HTMLAttributes } from 'react';\n\nexport interface RadioProps extends HTMLAttributes<HTMLInputElement> {\n  id: string;\n  name?: string;\n  value?: string;\n  selected: boolean;\n  disabled?: boolean;\n  error?: boolean;\n  label: string;\n  onChange: () => void;\n}\n\nexport const RadioScope = 'zep-radio';\n","// Radio.tsx\nimport clsx from 'clsx';\nimport { focusRing } from '../../../tailwind/styles/focus';\nimport { RadioProps, RadioScope } from './radio.interface';\nimport { borderRadius } from '../../../tailwind/styles/border-radius';\n\nexport const Radio: React.FC<RadioProps> = ({\n  id,\n  name,\n  value = id,\n  selected = false,\n  disabled = false,\n  error = false,\n  label,\n  tabIndex = 0,\n  onChange,\n  ...props\n}) => {\n  return (\n    <span\n      className={clsx(\n        RadioScope,\n        'inline-flex',\n        'flex-row',\n        'flex-wrap',\n        'items-center',\n        'justify-start',\n        'relative',\n        'group',\n        { 'cursor-not-allowed opacity-zep-40': disabled },\n      )}\n      data-testid=\"zep-radio\"\n    >\n      {selected && (\n        <span\n          className={clsx(\n            'absolute',\n            'z-10',\n            'absolute',\n            'border-white',\n            { 'w-[22px] h-[22px] top-[1px] left-[1px] border-[6px]': !error },\n            { 'w-[20px] h-[20px] top-[2px] left-[2px] border-[5px]': error },\n            'rounded-full',\n            [error ? 'bg-zep-error' : '  bg-zep-darkgrey-500'],\n            { 'group-hover:bg-zep-darkgrey-300': !disabled && !error },\n          )}\n        ></span>\n      )}\n      <input\n        id={id}\n        value={value}\n        name={name}\n        type=\"radio\"\n        tabIndex={tabIndex}\n        checked={selected}\n        onChange={!disabled ? onChange : undefined}\n        className={clsx(\n          borderRadius,\n          focusRing,\n          'appearance-none',\n          'focus-visible:ring-offset-1',\n          'w-zep-1.5',\n          'h-zep-1.5',\n          'rounded-full',\n          'border',\n          'border-zep-darkgrey-500',\n          { 'border-zep-2': error },\n          { 'group-hover:border-zep-darkgrey-300': !disabled && !error },\n          { 'bg-zep-error border-zep-error ': error && selected },\n          { 'border-zep-error': error && !selected },\n        )}\n        disabled={disabled}\n        data-testid=\"zep-radio-input\"\n        {...props}\n      />\n      <label\n        htmlFor={id}\n        className={clsx('relative', 'z-20', 'ml-[-24px]', 'pl-[36px]', [\n          { 'cursor-pointer [&>div]:hover:border-zep-darkgrey-500': !disabled },\n        ])}\n      >\n        {label}\n      </label>\n    </span>\n  );\n};\n"],"names":["RadioScope","Radio","id","name","value","selected","disabled","error","label","tabIndex","onChange","props","React","clsx","borderRadius","focusRing"],"mappings":"iQAaO,MAAMA,EAAa,YCPnBC,EAAA,CAAA,CAAqC,GAAAC,EAC1C,KAAAC,EACA,MAAAC,EAAAF,EACQ,SAAAG,EAAA,GACG,SAAAC,EAAA,GACA,MAAAC,EAAA,GACH,MAAAC,EACR,SAAAC,EAAA,EACW,SAAAC,EACX,GAAAC,CAEF,IACEC,EAAA,cACE,OAAC,CAAA,UAAAC,EACYb,EACT,cACA,WACA,YACA,eACA,gBACA,WACA,QACA,CAAA,oCAAAM,CAAA,CACgD,EAClD,cAAA,WACY,EAAAD,GAAAO,EAAA,cAGV,OAAC,CAAA,UAAAC,EACY,WACT,OACA,WACA,eACA,CAAA,sDAAA,CAAAN,CAAA,EACgE,CAAA,sDAAAA,CAAA,EACD,eAC/D,CAAAA,EAAA,eAAA,uBAAA,EACiD,CAAA,kCAAA,CAAAD,GAAA,CAAAC,CAAA,CACQ,CAC3D,CAAA,EACDK,EAAA,cAEH,QAAC,CAAA,GAAAV,EACC,MAAAE,EACA,KAAAD,EACA,KAAA,QACK,SAAAM,EACL,QAAAJ,EACS,SAAAC,EAAA,OAAAI,EACwB,UAAAG,EACtBC,EACTC,EACA,kBACA,8BACA,YACA,YACA,eACA,SACA,0BACA,CAAA,eAAAR,CAAA,EACwB,CAAA,sCAAA,CAAAD,GAAA,CAAAC,CAAA,EACqC,CAAA,iCAAAA,GAAAF,CAAA,EACP,CAAA,mBAAAE,GAAA,CAAAF,CAAA,CACb,EAC3C,SAAAC,EACA,cAAA,kBACY,GAAAK,CACR,CAAA,EACNC,EAAA,cACA,QAAC,CAAA,QAAAV,EACU,UAAAW,EAAA,WAAA,OAAA,aAAA,YAAA,CACsD,CAAA,uDAAA,CAAAP,CAAA,CACO,CAAA,CACrE,EAAAE,CAEA,CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
{"version":3,"file":"Button-fa3a9429.js","sources":["../../src/components/atoms/button/button.interface.ts","../../src/components/atoms/button/Button.tsx"],"sourcesContent":["import { ButtonHTMLAttributes, MouseEvent, ReactNode } from 'react';\n\nexport enum ButtonVariant {\n  Primary = 'Primary',\n  Secondary = 'Secondary',\n  Ghost = 'Ghost',\n}\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  label?: string;\n  variant?: ButtonVariant;\n  icon?: ReactNode;\n  isLoading?: boolean;\n  children?: ReactNode;\n  onClick?: (ev: MouseEvent<HTMLElement>) => void;\n}\n","import './button.css'; // import css / tailwind / whatever\n\nimport { ButtonProps, ButtonVariant } from './button.interface';\n\nimport { FC } from 'react';\n\nexport const Button: FC<ButtonProps> = ({\n  variant = ButtonVariant.Primary,\n  label,\n  isLoading = false,\n  children,\n  ...props\n}: ButtonProps) => {\n  const mode =\n    variant === ButtonVariant.Primary ? 'button--primary' : ButtonVariant.Secondary ? 'button--secondary' : '';\n  const loading = isLoading ? <i data-testid=\"loading-icon\">loading icon</i> : '';\n  const content = label || children;\n\n  return (\n    <button className={`button ${mode}`} {...props}>\n      {loading}\n      {content}\n    </button>\n  );\n};\n"],"names":["ButtonVariant","Button","variant","label","isLoading","children","props","mode","loading","React","content"],"mappings":"wCAEY,IAAAA,GAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,UAAY,YACZA,EAAA,MAAQ,QAHEA,IAAAA,GAAA,CAAA,CAAA,ECIL,MAAAC,EAAA,CAAA,CAAiC,QAAAC,EAAAF,EAAA,QACd,MAAAG,EACxB,UAAAC,EAAA,GACY,SAAAC,EACZ,GAAAC,CAEF,IAAA,CACE,MAAAC,EAAAL,IAAAF,EAAA,QAAA,kBAAAA,EAAA,UAAA,oBAAA,GAEAQ,EAAAJ,EAAAK,EAAA,cAAA,IAAA,CAAA,cAAA,cAAA,EAAA,cAAA,EAAA,GACAC,EAAAP,GAAAE,EAEA,OAAAI,EAAA,cAAA,SAAA,CAAA,UAAA,UAAAF,IAAA,GAAAD,CAAA,EAAAE,EAAAE,CAAA,CAMF"}
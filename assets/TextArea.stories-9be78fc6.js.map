{"version":3,"file":"TextArea.stories-9be78fc6.js","sources":["../../src/components/atoms/text-area/TextArea.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { FunctionalIcon } from '../icon/Icon';\nimport { TextAreaProps } from './TextArea.interface';\nimport React from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nexport const TextArea: React.FC<TextAreaProps> = ({\n  disabled = false,\n  label,\n  message,\n  placeholder,\n  readonly = false,\n  state = 'default',\n  totalCharacters = 500,\n  ...props\n}) => {\n  const inputRef = React.useRef(null);\n  const hasError = state === 'error';\n  const [query, setQuery] = React.useState('');\n\n  const disabledOrReadonly = disabled || readonly;\n  const iconColor = hasError\n    ? 'zep-text-textarea-supportText-error'\n    : state === 'info'\n    ? 'zep-text-textarea-supportText-info'\n    : 'zep-text-textarea-supportText-default';\n\n  const color = disabled\n    ? 'zep-text-textarea-placeholder-default/40'\n    : !readonly\n    ? 'zep-text-textarea-placeholder-default/70'\n    : 'zep-text-textarea-placeholder-default';\n\n  const _placeholder = disabled\n    ? 'zep-text-textarea-placeholder-default/40'\n    : !readonly\n    ? 'zep-text-textarea-placeholder-default'\n    : 'zep-text-textarea-placeholder-default/70';\n\n  const inputClasses = clsx(\n    'zep-inline-flex',\n    'zep-justify-between',\n    'zep-rounded-textarea',\n    'zep-border-solid',\n    'zep-pl-1', // TODO: -> zep-pl-textarea-pl\n    'zep-py-0.75', // TODO: -> zep-py-textarea-py\n    'zep-font-roboto',\n    'zep-w-full',\n    'zep-outline-none',\n    hasError ? 'zep-border-2' : 'zep-border-1', // TODO: should be zep-border-textarea-width-error &  zep-border-textarea-width-default\n    'zep-pr-0.75', // TODO: -> zep-pr-textarea-pr\n    color,\n    _placeholder,\n    { 'zep-bg-textarea-bg-readOnly': readonly },\n    { 'zep-border-textarea-default': !disabled && !hasError },\n    { 'border-zep-typography-dark-70/40': disabled },\n    { 'zep-border-error': hasError },\n    { 'zep-active:ring': !disabledOrReadonly },\n    { 'zep-ring-offset-1': !disabledOrReadonly },\n    { 'focus-visible:ring': !disabledOrReadonly },\n    { 'zep-ring-focus': !disabledOrReadonly },\n    { 'zep-cursor-not-allowed': disabledOrReadonly },\n  );\n  return (\n    <div\n      // TODO: use `zep-opacity-textarea-disabled` here && remove all other disabled styles from input, options, icon etc.\n      className={twMerge(clsx('zep-relative', 'zep-inline-block', 'zep-text-left', 'zep-w-[326px]'), props.className)}\n      data-testid=\"zep-text-area\"\n      {...props}\n    >\n      {label && (\n        <div\n          className={clsx('zep-block', 'zep-mb-0.5', { 'text-zep-typography-dark-70/40': disabled })} // TODO: remove after using `zep-opacity-disabled` on parent\n        >\n          {label}\n        </div>\n      )}\n      <div className=\"zep-relative zep-mt-0.5\">\n        <textarea\n          className={inputClasses}\n          maxLength={500}\n          autoComplete=\"off\"\n          placeholder={placeholder}\n          disabled={disabled}\n          ref={inputRef}\n          data-testid=\"zep-text-area-input\"\n          onChange={(event) => setQuery(event.target.value)}\n        />\n      </div>\n      <div\n        className={clsx(\n          'zep-mt-[4px]', // TODO: 'zep-mt-textarea-support-gap'\n          'zep-tagline',\n          'zep-text-0.875', // TODO: 'zep-text-textarea-support'\n          'zep-flex',\n          'zep-items-center',\n          iconColor,\n        )}\n      >\n        {message && (\n          <div className={clsx('zep-flex zep-items-center')}>\n            {state !== 'default' && (\n              <FunctionalIcon\n                name={state === 'error' ? 'WarningTriangleFilled' : 'InfoCircleFilled'}\n                role=\"img\"\n                size={24}\n                // TODO: replace with zep-gap-textarea-support-gap on parent\n                className=\"zep-mr-0.5 zep-shrink-0\"\n              />\n            )}\n            <span>{message}</span>\n          </div>\n        )}\n        <div className={clsx('zep-ml-auto')} data-testid=\"zep-text-area-length-indicator\">\n          {query.length} / {totalCharacters}\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["TextArea","disabled","label","message","placeholder","readonly","state","totalCharacters","props","inputRef","React","hasError","query","setQuery","disabledOrReadonly","iconColor","inputClasses","clsx","twMerge","event","FunctionalIcon"],"mappings":"0MAMO,MAAAA,EAAA,CAAA,CAA2C,SAAAC,EAAA,GACrC,MAAAC,EACX,QAAAC,EACA,YAAAC,EACA,SAAAC,EAAA,GACW,MAAAC,EAAA,UACH,gBAAAC,EAAA,IACU,GAAAC,CAEpB,IAAA,CACE,MAAAC,EAAAC,EAAA,OAAA,IAAA,EACAC,EAAAL,IAAA,QACA,CAAAM,EAAAC,CAAA,EAAAH,EAAA,SAAA,EAAA,EAEAI,EAAAb,GAAAI,EACAU,EAAAJ,EAAA,sCAAAL,IAAA,OAAA,qCAAA,wCAkBAU,EAAAC,EAAqB,kBACnB,sBACA,uBACA,mBACA,WACA,cACA,kBACA,aACA,mBACAN,EAAA,eAAA,eAC4B,cAtB9BV,EAAA,2CAAAI,EAAA,wCAAA,2CAMAJ,EAAA,2CAAAI,EAAA,2CAAA,wCAmBE,CAAA,8BAAAA,CAAA,EAC0C,CAAA,8BAAA,CAAAJ,GAAA,CAAAU,CAAA,EACc,CAAA,mCAAAV,CAAA,EACT,CAAA,mBAAAU,CAAA,EAChB,CAAA,kBAAA,CAAAG,CAAA,EACU,CAAA,oBAAA,CAAAA,CAAA,EACE,CAAA,qBAAA,CAAAA,CAAA,EACC,CAAA,iBAAA,CAAAA,CAAA,EACJ,CAAA,yBAAAA,CAAA,CACO,EAEjD,OAAAJ,EAAA,cACE,MAAC,CAAA,UAAAQ,EAAAD,EAAA,eAAA,mBAAA,gBAAA,eAAA,EAAAT,EAAA,SAAA,EAE+G,cAAA,gBAClG,GAAAA,CACR,EAAAN,GAAAQ,EAAA,cAGF,MAAC,CAAA,UAAAO,EAAA,YAAA,aAAA,CAAA,iCAAAhB,EAAA,CAC0F,EAAAC,CAExF,EACHQ,EAAA,cAAA,MAAA,CAAA,UAAA,yBAAA,EAAAA,EAAA,cAGA,WAAC,CAAA,UAAAM,EACY,UAAA,IACA,aAAA,MACE,YAAAZ,EACb,SAAAH,EACA,IAAAQ,EACK,cAAA,sBACO,SAAAU,GAAAN,EAAAM,EAAA,OAAA,KAAA,CACoC,CAAA,CAAA,EAEpDT,EAAA,cACA,MAAC,CAAA,UAAAO,EACY,eACT,cACA,iBACA,WACA,mBACAF,CACA,CACF,EAAAZ,GAAAO,EAAA,cAAA,MAAA,CAAA,UAAAO,EAAA,2BAAA,CAAA,EAAAX,IAAA,WAAAI,EAAA,cAKMU,EAAC,CAAA,KAAAd,IAAA,QAAA,wBAAA,mBACqD,KAAA,MAC/C,KAAA,GACC,UAAA,yBAEI,CAAA,EAAAI,EAAA,cAAA,OAAA,KAAAP,CAAA,CAAA,EAIhBO,EAAA,cAAA,MAAA,CAAA,UAAAO,EAAA,aAAA,EAAA,cAAA,gCAAA,EAAAL,EAAA,OAAA,MAAAL,CAAA,CAIF,CACF,CAGN;;;;;;;;;"}
{"version":3,"file":"Checkbox-1042204c.js","sources":["../../src/components/atoms/checkbox/checkbox.interface.ts","../../src/components/atoms/checkbox/Checkbox.tsx"],"sourcesContent":["import { HTMLAttributes } from 'react';\n\nexport interface CheckboxProps extends HTMLAttributes<HTMLInputElement> {\n  id: string;\n  checked: boolean;\n  disabled?: boolean;\n  error?: boolean;\n  label: string;\n  onChange: () => void;\n}\n\nexport const CheckboxScope = 'zep-checkbox';\n","// Checkbox.tsx\nimport clsx from 'clsx';\nimport { focusRing } from './../../../tailwind/styles/focus';\nimport { FunctionalIcon } from '../icon/Icon';\nimport { CheckboxProps, CheckboxScope } from './checkbox.interface';\nimport { borderRadius } from './../../../tailwind/styles/border-radius';\n\nexport const Checkbox: React.FC<CheckboxProps> = ({\n  id,\n  checked = false,\n  disabled = false,\n  error = false,\n  label,\n  onChange,\n  ...props\n}) => {\n  return (\n    <span\n      className={clsx(\n        CheckboxScope,\n        'inline-flex',\n        'flex-row',\n        'flex-wrap',\n        'items-center',\n        'justify-start',\n        'relative',\n        'group',\n        { 'cursor-not-allowed opacity-zep-40': disabled },\n      )}\n      data-testid=\"zep-checkbox\"\n    >\n      {checked && (\n        <FunctionalIcon\n          name=\"Check\"\n          className={clsx(\n            borderRadius,\n            'w-zep-1.5',\n            'h-zep-1.5',\n            'text-zep-greyScale-0',\n            'z-10',\n            'absolute',\n            'top-[-0.1px]',\n            'left-[-0.1px]',\n            { 'bg-zep-darkgrey-500': !error },\n            { 'group-hover:bg-zep-darkgrey-300': !error && !disabled },\n            { 'bg-zep-error': error },\n          )}\n        />\n      )}\n      <input\n        id={id}\n        type=\"checkbox\"\n        checked={checked}\n        onChange={!disabled ? onChange : undefined}\n        className={clsx(\n          borderRadius,\n          focusRing,\n          'appearance-none',\n          'focus-visible:ring-offset-1',\n          'w-zep-1.5',\n          'h-zep-1.5',\n          'rounded',\n          'border',\n          { 'border-zep-2  border-zep-error': error },\n          { 'group-hover:border-zep-darkgrey-300': !error },\n          { 'border-zep-darkgrey-500': !error },\n        )}\n        disabled={disabled}\n        data-testid=\"zep-checkbox-input\"\n        {...props}\n      />\n      <label\n        htmlFor={id}\n        className={clsx('zep-body-text', 'relative', 'z-20', '-ml-zep-1.5', 'pl-[36px]', [\n          disabled ? 'cursor-not-allowed opacity-zep-40' : 'cursor-pointer [&>div]:hover:border-zep-darkgrey-500',\n        ])}\n      >\n        {label}\n      </label>\n    </span>\n  );\n};\n"],"names":["CheckboxScope","Checkbox","id","checked","disabled","error","label","onChange","props","React","clsx","FunctionalIcon","borderRadius","focusRing"],"mappings":"gNAWO,MAAMA,EAAgB,eCJtBC,EAAA,CAAA,CAA2C,GAAAC,EAChD,QAAAC,EAAA,GACU,SAAAC,EAAA,GACC,MAAAC,EAAA,GACH,MAAAC,EACR,SAAAC,EACA,GAAAC,CAEF,IACEC,EAAA,cACE,OAAC,CAAA,UAAAC,EACYV,EACT,cACA,WACA,YACA,eACA,gBACA,WACA,QACA,CAAA,oCAAAI,CAAA,CACgD,EAClD,cAAA,cACY,EAAAD,GAAAM,EAAA,cAGVE,EAAC,CAAA,KAAA,QACM,UAAAD,EACME,EACT,YACA,YACA,uBACA,OACA,WACA,eACA,gBACA,CAAA,sBAAA,CAAAP,CAAA,EACgC,CAAA,kCAAA,CAAAA,GAAA,CAAAD,CAAA,EACyB,CAAA,eAAAC,CAAA,CACjC,CAC1B,CAAA,EACFI,EAAA,cAEF,QAAC,CAAA,GAAAP,EACC,KAAA,WACK,QAAAC,EACL,SAAAC,EAAA,OAAAG,EACiC,UAAAG,EACtBE,EACTC,EACA,kBACA,8BACA,YACA,YACA,UACA,SACA,CAAA,iCAAAR,CAAA,EAC0C,CAAA,sCAAA,CAAAA,CAAA,EACM,CAAA,0BAAA,CAAAA,CAAA,CACZ,EACtC,SAAAD,EACA,cAAA,qBACY,GAAAI,CACR,CAAA,EACNC,EAAA,cACA,QAAC,CAAA,QAAAP,EACU,UAAAQ,EAAA,gBAAA,WAAA,OAAA,cAAA,YAAA,CACwEN,EAAA,oCAAA,sDAC9B,CAAA,CAClD,EAAAE,CAEA,CACH"}
{"version":3,"file":"Button-6536b97b.js","sources":["../../src/components/atoms/button/button.interface.ts","../../src/components/atoms/button/Button.tsx"],"sourcesContent":["import { MouseEvent, ReactNode, ButtonHTMLAttributes } from \"react\";\n\nexport enum ButtonVariant {\n  Primary = \"primary\",\n  Secondary = \"secondary\",\n  Ghost = \"ghost\",\n}\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  label?: string;\n  variant?: ButtonVariant;\n  icon?: ReactNode;\n  isLoading?: boolean;\n  children?: ReactNode;\n  onClick?: (ev: MouseEvent<HTMLElement>) => void;\n}\n","import { FC } from \"react\";\nimport \"./button.css\"; // import css / tailwind / whatever\nimport { ButtonProps, ButtonVariant } from \"./button.interface\";\n\nexport const Button: FC<ButtonProps> = ({\n  variant = ButtonVariant.Primary,\n  label,\n  isLoading = false,\n  children,\n  ...props\n}: ButtonProps) => {\n  const theme = \"\"; // useTheme via context provider\n  const mode =\n    variant === \"primary\"\n      ? \"button--primary\"\n      : \"secondary\"\n      ? \"button--secondary\"\n      : \"\";\n  const loading = isLoading ? <i>loading icon</i> : \"\";\n  const content = label || children;\n\n  return (\n    <button className={`button ${theme} ${mode}`} {...props}>\n      {loading}\n      {content}\n    </button>\n  );\n};\n"],"names":["ButtonVariant","Button","variant","label","isLoading","children","props","theme","mode","loading","React","content"],"mappings":"wCAEY,IAAAA,GAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,UAAY,YACZA,EAAA,MAAQ,QAHEA,IAAAA,GAAA,CAAA,CAAA,ECEL,MAAAC,EAAA,CAAA,CAAiC,QAAAC,EAAAF,EAAA,QACd,MAAAG,EACxB,UAAAC,EAAA,GACY,SAAAC,EACZ,GAAAC,CAEF,IAAA,CACE,MAAAC,EAAA,GACAC,EAAAN,IAAA,UAAA,kBAAA,oBAMAO,EAAAL,EAAAM,EAAA,cAAA,IAAA,KAAA,cAAA,EAAA,GACAC,EAAAR,GAAAE,EAEA,OAAAK,EAAA,cAAA,SAAA,CAAA,UAAA,UAAAH,KAAAC,IAAA,GAAAF,CAAA,EAAAG,EAAAE,CAAA,CAMF"}